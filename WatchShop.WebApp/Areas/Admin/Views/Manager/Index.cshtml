@model IEnumerable<WatchShop.Data.Models.HoaDon>

@{
    ViewBag.Title = "Admin Dashboard";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPageAdmin.cshtml";
    int? doanhThu1 = 0;
    foreach (var item in Model.Where(i => i.NgayLapHD.ToString("dd/MM/yyyy") == "10/11/2019"))
    {
        doanhThu1 += item.TongGiaTriHD;
    }
    int? doanhThu2 = 0;
    foreach (var item in Model.Where(i => i.NgayLapHD.ToString("dd/MM/yyyy") == "11/11/2019"))
    {
        doanhThu2 += item.TongGiaTriHD;
    }
    int? doanhThu3 = 0;
    foreach (var item in Model.Where(i => i.NgayLapHD.ToString("dd/MM/yyyy") == "12/11/2019"))
    {
        doanhThu3 += item.TongGiaTriHD;
    }
    int? doanhThu4 = 0;
    foreach (var item in Model.Where(i => i.NgayLapHD.ToString("dd/MM/yyyy") == "13/11/2019"))
    {
        doanhThu4 += item.TongGiaTriHD;
    }
    int? doanhThu5 = 0;
    foreach (var item in Model.Where(i => i.NgayLapHD.ToString("dd/MM/yyyy") == "14/11/2019"))
    {
        doanhThu5 += item.TongGiaTriHD;
    }
    int? doanhThu6 = 0;
    foreach (var item in Model.Where(i => i.NgayLapHD.ToString("dd/MM/yyyy") == "15/11/2019"))
    {
        doanhThu6 += item.TongGiaTriHD;
    }
    List<WatchShop.Data.Models.KhachHang> khachHangs = new List<WatchShop.Data.Models.KhachHang>();
    List<int?> doanhThuKH = new List<int?>();
    foreach (var item in Model)
    {
        if (!khachHangs.Contains(item.KhachHang))
        {
            khachHangs.Add(item.KhachHang);
            int? dtKH = 0;
            Model.Where(i => i.MaKH == item.MaKH).ToList().ForEach(i => { dtKH += i.TongGiaTriHD; });
            doanhThuKH.Add(dtKH);
        }
    }
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Thống kê doanh thu 5 ngày gần nhất</h6>
    </div>
    <div class="card-body">
        <div class="chart-bar">
            <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
            <canvas id="myBarChart" width="977" height="400" class="chartjs-render-monitor" style="display: block; height: 320px; width: 782px;"></canvas>
        </div>
        <hr>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Thống kê khách hàng mua hàng nhiều nhất</h6>
    </div>
    <div class="card-body">
        <div class="chart-bar">
            <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
            <canvas id="khachHangChart" width="977" height="400" class="chartjs-render-monitor" style="display: block; height: 320px; width: 782px;"></canvas>
        </div>
        <hr>
    </div>
</div>

<script src="~/Areas/Admin/Content/vendor/chart.js/Chart.min.js"></script>
<script>
    // Set new default font family and font color to mimic Bootstrap's default styling
    Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#858796';

    function number_format(number, decimals, dec_point, thousands_sep) {
        // *     example: number_format(1234.56, 2, ',', ' ');
        // *     return: '1 234,56'
        number = (number + '').replace(',', '').replace(' ', '');
        var n = !isFinite(+number) ? 0 : +number,
            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
            s = '',
            toFixedFix = function (n, prec) {
                var k = Math.pow(10, prec);
                return '' + Math.round(n * k) / k;
            };
        // Fix for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || '';
            s[1] += new Array(prec - s[1].length + 1).join('0');
        }
        return s.join(dec);
    }

    // Bar Chart Example
    var ctx = document.getElementById("myBarChart");
    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ["10/11", "11/11", "12/11", "13/11", "14/11", "15/11"],
            datasets: [{
                label: "Revenue",
                backgroundColor: "#4e73df",
                hoverBackgroundColor: "#2e59d9",
                borderColor: "#4e73df",
                data: [@doanhThu1, @doanhThu2, @doanhThu3, @doanhThu4, @doanhThu5, @doanhThu6],
            }],
        },
        options: {
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 25,
                    top: 25,
                    bottom: 0
                }
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'month'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 6
                    },
                    maxBarThickness: 25,
                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 25000000,
                        maxTicksLimit: 5,
                        padding: 10,
                        // Include a dollar sign in the ticks
                        callback: function (value, index, values) {
                            return number_format(value) + " VND";
                        }
                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                }],
            },
            legend: {
                display: false
            },
            tooltips: {
                titleMarginBottom: 10,
                titleFontColor: '#6e707e',
                titleFontSize: 14,
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                caretPadding: 10,
                callbacks: {
                    label: function (tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                    }
                }
            },
        }
    });

    // Bar Chart Example
    var ctxKH = document.getElementById("khachHangChart");
    var khachHangChart = new Chart(ctxKH, {
        type: 'bar',
        data: {
            labels: ["@khachHangs[0].HoTen", "@khachHangs[1].HoTen", "@khachHangs[2].HoTen"],
            datasets: [{
                label: "Revenue",
                backgroundColor: "#4e73df",
                hoverBackgroundColor: "#2e59d9",
                borderColor: "#4e73df",
                data: [@doanhThuKH[0],@doanhThuKH[1],@doanhThuKH[2]]
            }],
        },
        options: {
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 25,
                    top: 25,
                    bottom: 0
                }
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'month'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 6
                    },
                    maxBarThickness: 25,
                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 60000000,
                        maxTicksLimit: 5,
                        padding: 10,
                        // Include a dollar sign in the ticks
                        callback: function (value, index, values) {
                            return number_format(value) + " VND";
                        }
                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                }],
            },
            legend: {
                display: false
            },
            tooltips: {
                titleMarginBottom: 10,
                titleFontColor: '#6e707e',
                titleFontSize: 14,
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                caretPadding: 10,
                callbacks: {
                    label: function (tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                    }
                }
            },
        }
    });

</script>